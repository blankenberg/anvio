<tool id="anvi_gen_gene_level_stats_databases" name="anvi-gen-gene-level-stats-databases" version="5.3.0">
    <description>A program to compute genes databases for a ginen set of bins stored in                                                  an anvi'o collection. Genes databases store gene-level coverage and                                                  detection statistics, and they are usually computed and generated                                                  automatically when they are required (such as running anvi-interactive                                                  with `--gene-mode` flag). This program allows you to pre-compute them                                                  if you don't want them to be done all at once.</description>
    <requirements>
        <requirement type="package" version="5.3.0">anvio</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <version_command>anvi-gen-gene-level-stats-databases --version</version_command>
    <command><![CDATA[
        cp -R '${input_contigs_db.extra_files_path}' '${output_contigs_db.extra_files_path}'
 && 
cp -R '${input_profile_db.extra_files_path}' '${output_profile_db.extra_files_path}'
 &&
 anvi-gen-gene-level-stats-databases
--contigs-db '${output_contigs_db.extra_files_path}/CONTIGS.db'

--profile-db '${output_profile_db.extra_files_path}/PROFILE.db'


#if $str( $collection_name ):
    --collection-name '${collection_name}'
#end if


#if $str( $bin_id ):
    --bin-id '${bin_id}'
#end if


#if $bin_ids_file:
    --bin-ids-file '${bin_ids_file}'
#end if

${zeros_are_outliers}


#if $str( $outliers_threshold ):
    --outliers-threshold '${outliers_threshold}'
#end if

--just-do-it
&> '${GALAXY_ANVIO_LOG}'

    ]]></command>
    <inputs>
        <param name="input_contigs_db" type="data" label="Contigs Db" format="anvio_contigs_db" optional="False" multiple="False" argument="--contigs-db" help="Anvi'o contigs database generated by 'anvi-gen-contigs'"/>
        <param name="input_profile_db" type="data" label="Profile Db" format="anvio_profile_db" optional="False" multiple="False" argument="--profile-db" help="Anvi'o profile database"/>
        <param name="collection_name" type="text" label="Collection Name" value="" optional="True" argument="--collection-name" help="Collection name."/>
        <param name="bin_id" type="text" label="Bin Id" value="" optional="True" argument="--bin-id" help="Bin name you are interested in."/>
        <param name="bin_ids_file" type="data" label="Bin Ids File" format="txt" optional="True" multiple="False" argument="--bin-ids-file" help="Text file for bins (each line should be a unique bin id)."/>
        <param name="zeros_are_outliers" type="boolean" label="Zeros Are Outliers" truevalue="--zeros-are-outliers" falsevalue="" checked="False" optional="True" argument="--zeros-are-outliers" help="If you want all zero coverage positions to be treated like outliers then use this flag. The reason to treat zero coverage as outliers is because when mapping reads to a reference we could get many zero positions due to accessory genes. These positions then skew the average values that we compute."/>
        <param name="outliers_threshold" type="text" label="Outliers Threshold" value="1.5" optional="True" argument="--outliers-threshold" help="Threshold to use for the outlier detection. The default value is '%(default).1f'. Absolute deviation around the median is used. To read more about the method please refer to: 'How to Detect and Handle Outliers' by Boris Iglewicz and David Hoaglin (doi:10.1016/j.jesp.2013.03.013)."/>
    </inputs>
    <outputs>
        <data name="output_contigs_db" format="anvio_contigs_db" format_source="input_contigs_db" metadata_source="input_contigs_db" label="${tool.name} on ${on_string}: Contigs Db"/>
        <data name="output_profile_db" format="anvio_profile_db" format_source="input_profile_db" metadata_source="input_profile_db" label="${tool.name} on ${on_string}: Profile Db"/>
        <data name="GALAXY_ANVIO_LOG" format="txt" label="${tool.name} on ${on_string}: Log"/>
    </outputs>
    <help><![CDATA[
        usage: anvi-gen-gene-level-stats-databases [-h] -c CONTIGS_DB -p PROFILE_DB
                              [-C COLLECTION_NAME] [-b BIN_NAME]
                              [-B FILE_PATH] [--zeros-are-outliers]
                              [--outliers-threshold NUM] [--just-do-it]

A program to compute genes databases for a ginen set of bins stored in an
anvi'o collection. Genes databases store gene-level coverage and detection
statistics, and they are usually computed and generated automatically when
they are required (such as running anvi-interactive with `--gene-mode` flag).
This program allows you to pre-compute them if you don't want them to be done
all at once.

optional arguments:
  -h, --help            show this help message and exit
  -c CONTIGS_DB, --contigs-db CONTIGS_DB
                        Anvi'o contigs database generated by 'anvi-gen-
                        contigs'
  -p PROFILE_DB, --profile-db PROFILE_DB
                        Anvi'o profile database
  -C COLLECTION_NAME, --collection-name COLLECTION_NAME
                        Collection name.
  -b BIN_NAME, --bin-id BIN_NAME
                        Bin name you are interested in.
  -B FILE_PATH, --bin-ids-file FILE_PATH
                        Text file for bins (each line should be a unique bin
                        id).
  --zeros-are-outliers  If you want all zero coverage positions to be treated
                        like outliers then use this flag. The reason to treat
                        zero coverage as outliers is because when mapping
                        reads to a reference we could get many zero positions
                        due to accessory genes. These positions then skew the
                        average values that we compute.
  --outliers-threshold NUM
                        Threshold to use for the outlier detection. The
                        default value is '1.5'. Absolute deviation around the
                        median is used. To read more about the method please
                        refer to: 'How to Detect and Handle Outliers' by Boris
                        Iglewicz and David Hoaglin
                        (doi:10.1016/j.jesp.2013.03.013).
  --just-do-it          Don't bother me with questions or warnings, just do
                        it.

INPUT DATABASES:
  Which anvi'o databases do you wish to work today?

BIN(S) AND COLLECTION:
  You can select a bin, multiple bins, or you can simply focus on every bin
  in a collection by providing only a collection name. Once you are done
  with your selection, anvi'o will generate an individual genes database for
  each of the bin it finds.

ADDITIONAL PARAMETERS:
  These parameters are those that are critical to identify outlier
  nucleotide positions and how to define what should be included in those
  calculations. In most cases you can leave them as is, and things are going
  to be alright.

PARAMETERS OF CONVENIENCE:
  They say they save lives.

    ]]></help>
    <citations>
        <citation type="doi">10.7717/peerj.1319</citation>
        <citation type="bibtex">@ARTICLE{Blankenberg19-anvio,
   author = {Daniel Blankenberg, et al},
   title = {In preparation..},
   }</citation>
    </citations>
</tool>