<tool id="anvi_gen_variability_profile" name="anvi-gen-variability-profile" version="5.2">
    <description>Extract information for variable positions</description>
    <requirements>
        <requirement type="package" version="5.2">anvio</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <version_command>anvi-gen-variability-profile --version</version_command>
    <command><![CDATA[
        cp -R '${input_profile_db.extra_files_path}' '${output_profile_db.extra_files_path}'
 && 
cp -R '${input_contigs_db.extra_files_path}' '${output_contigs_db.extra_files_path}'
 && 

    #if $input_structure_db:
        cp -R '${input_structure_db.extra_files_path}' '${output_structure_db.extra_files_path}'
    #else
        echo ''
    #end if
 &&
 anvi-gen-variability-profile

#if $splits_of_interest:
    --splits-of-interest '${splits_of_interest}'
#end if


#if $str( $collection_name ):
    --collection-name '${collection_name}'
#end if


#if $str( $bin_id ):
    --bin-id '${bin_id}'
#end if


#if $genes_of_interest:
    --genes-of-interest '${genes_of_interest}'
#end if


#if $str( $gene_caller_ids ):
    --gene-caller-ids '${gene_caller_ids}'
#end if

--profile-db '${output_profile_db.extra_files_path}/PROFILE.db'

--contigs-db '${output_contigs_db.extra_files_path}/CONTIGS.db'


#if $output_structure_db:
    --structure-db '${output_structure_db.extra_files_path}/${output_structure_db.metadata.anvio_basename}'
#end if


#if $output_file:
    --output-file '${output_file}'
#end if


#if $samples_of_interest:
    --samples-of-interest '${samples_of_interest}'
#end if

${quince_mode}

${include_contig_names}

${include_split_names}

${compute_gene_coverage_stats}


#if $str( $engine ):
    --engine '${engine}'
#end if


#if $str( $num_positions_from_each_split ):
    --num-positions-from-each-split '${num_positions_from_each_split}'
#end if


#if $str( $min_coverage_in_each_sample ):
    --min-coverage-in-each-sample '${min_coverage_in_each_sample}'
#end if


#if $str( $min_departure_from_reference ):
    --min-departure-from-reference '${min_departure_from_reference}'
#end if


#if $str( $max_departure_from_reference ):
    --max-departure-from-reference '${max_departure_from_reference}'
#end if


#if $str( $min_departure_from_consensus ):
    --min-departure-from-consensus '${min_departure_from_consensus}'
#end if


#if $str( $max_departure_from_consensus ):
    --max-departure-from-consensus '${max_departure_from_consensus}'
#end if


#if $str( $min_occurrence ):
    --min-occurrence '${min_occurrence}'
#end if

${only_if_structure}

${skip_synonymity}

&> '${GALAXY_ANVIO_LOG}'

    ]]></command>
    <inputs>
        <param name="splits_of_interest" type="data" label="Splits Of Interest" format="txt" optional="True" multiple="False" argument="--splits-of-interest" help="A file with split names. There should be only one column in the file, and each line should correspond to a unique split name."/>
        <param name="collection_name" type="text" label="Collection Name" value="" optional="True" argument="--collection-name" help="Collection name."/>
        <param name="bin_id" type="text" label="Bin Id" value="" optional="True" argument="--bin-id" help="Bin name you are interested in."/>
        <param name="genes_of_interest" type="data" label="Genes Of Interest" format="txt" optional="True" multiple="False" argument="--genes-of-interest" help="A file with anvi'o gene caller IDs. There should be only one column in the file, and each line should correspond to a unique gene caller id (without a column header)."/>
        <param name="gene_caller_ids" type="text" label="Gene Caller Ids" value="" optional="True" argument="--gene-caller-ids" help="Gene caller ids. Multiple of them can be declared separated by a delimiter (the default is a comma). In anvi-gen-variability-profile, if you declare nothing you will get all genes matching your other filtering criteria. In other programs, you may get everything, nothing, or an error. It really depends on the situation. Fortunately mistakes are cheap, so it's worth a try."/>
        <param name="input_profile_db" type="data" label="Profile Db" format="anvio_profile_db" optional="False" multiple="False" argument="--profile-db" help="Anvi'o profile database"/>
        <param name="input_contigs_db" type="data" label="Contigs Db" format="anvio_contigs_db" optional="False" multiple="False" argument="--contigs-db" help="Anvi'o contigs database generated by 'anvi-gen-contigs'"/>
        <param name="input_structure_db" type="data" label="Structure Db" format="anvio_structure_db" optional="True" multiple="False" argument="--structure-db" help="Anvi'o structure database."/>
        <param name="samples_of_interest" type="data" label="Samples Of Interest" format="txt" optional="True" multiple="False" argument="--samples-of-interest" help="A file with samples names. There should be only one column in the file, and each line should correspond to a unique sample name (without a column header)."/>
        <param name="quince_mode" type="boolean" label="Quince Mode" truevalue="--quince-mode" falsevalue="" checked="False" optional="True" argument="--quince-mode" help="The default behavior is to report base frequencies of nucleotide positions only if there is any variation reported during profiling (which by default uses some heuristics to minimize the impact of error-driven variation). So, if there are 10 samples, and a given position has been reported as a varaible site during profiling in only one of those samples, there will be no information will be stored in the database for the remaining 9. When this flag is used, we go back to each sample, and report base frequencies for each sample at this position even if they do not vary. It will take considerably longer to report when this flag is on, and the use of it will increase the file size dramatically, however it is inevitable for some statistical approaches (as well as for some beautiful visualizations)."/>
        <param name="include_contig_names" type="boolean" label="Include Contig Names" truevalue="--include-contig-names" falsevalue="" checked="False" optional="True" argument="--include-contig-names" help="Use this flag if you would like contig names for each variable position to be included in the output file as a column. By default, we do not include contig names since they can practically double the output file size without any actual benefit in most cases."/>
        <param name="include_split_names" type="boolean" label="Include Split Names" truevalue="--include-split-names" falsevalue="" checked="False" optional="True" argument="--include-split-names" help="Use this flag if you would like split names for each variable position to be included in the output file as a column."/>
        <param name="compute_gene_coverage_stats" type="boolean" label="Compute Gene Coverage Stats" truevalue="--compute-gene-coverage-stats" falsevalue="" checked="" optional="True" argument="--compute-gene-coverage-stats" help="If provided, gene coverage statistics will be appended to the table for each entry. This is very useful information, but will not be included by default because it is an expensive opeation, and you a busy person."/>
        <param name="engine" type="text" label="Engine" value="NT" optional="True" argument="--engine" help="Varaibility engine. The default is '%(default)s'."/>
        <param name="num_positions_from_each_split" type="integer" label="Num Positions From Each Split" value="0" optional="True" argument="--num-positions-from-each-split" help="Each split may have one or more variable positions. By default, anvi'o will report every SNV position found in a given split. This parameter will help you to define a cutoff for the maximum number of SNVs to be reported from a split (if the number of SNVs is more than the number you declare using this parameter, the positions will be randomly subsampled)."/>
        <param name="min_coverage_in_each_sample" type="integer" label="Min Coverage In Each Sample" value="0" optional="True" argument="--min-coverage-in-each-sample" help="Minimum coverage of a given variable nucleotide position in all samples. If a nucleotide position is covered less than this value even in one sample, it will be removed from the analysis. Default is %(default)d."/>
        <param name="min_departure_from_reference" type="float" label="Min Departure From Reference" value="0" optional="True" argument="--min-departure-from-reference" help="Takes a value between 0 and 1, where 1 is maximum divergence from the reference. Default is %(default)f. The reference here observation that corresponds to a given position in the mapped context."/>
        <param name="max_departure_from_reference" type="float" label="Max Departure From Reference" value="1" optional="True" argument="--max-departure-from-reference" help="Similar to '--min-departure-from-reference', but defines an upper limit for divergence. The default is %(default)f."/>
        <param name="min_departure_from_consensus" type="float" label="Min Departure From Consensus" value="0" optional="True" argument="--min-departure-from-consensus" help="Takes a value between 0 and 1, where 1 is maximum divergence from the consensus for a given position. The default is %(default)f. The consensus is the most frequent observation at a given positon."/>
        <param name="max_departure_from_consensus" type="float" label="Max Departure From Consensus" value="1" optional="True" argument="--max-departure-from-consensus" help="Similar to '--min-departure-from-consensus', but defines an upper limit for divergence. The default is %(default)f."/>
        <param name="min_occurrence" type="integer" label="Min Occurrence" value="1" optional="True" argument="--min-occurrence" help="Minimum number of samples a nucleotide position should be reported as variable. Default is %(default)d. If you set it to 2, for instance, each eligable variable position will be expected to appear in at least two samples, which will reduce the impact of stochastic, or unintelligeable varaible positions."/>
        <param name="only_if_structure" type="boolean" label="Only If Structure" truevalue="--only-if-structure" falsevalue="" checked="False" optional="True" argument="--only-if-structure" help="If provided, your genes of interest will be further subset to only include genes with structures in your structure database, and therefore must be supplied in conjunction with a structure database, i.e. `-s &lt;your_structure_database&gt;`. If you did not specify genes of interest, ALL genes will be subset to those that have structures."/>
        <param name="skip_synonymity" type="boolean" label="Skip Synonymity" truevalue="--skip-synonymity" falsevalue="" checked="False" optional="True" argument="--skip-synonymity" help="Computing synonymity can be an expensive operation for large data sets. Provide this flag to skip computing synonymity. It only makes sense to provide this flag when using --engine CDN."/>
    </inputs>
    <outputs>
        <data name="output_profile_db" format="anvio_profile_db" format_source="input_profile_db" metadata_source="input_profile_db" label="${tool.name} on ${on_string}: Profile Db"/>
        <data name="output_contigs_db" format="anvio_contigs_db" format_source="input_contigs_db" metadata_source="input_contigs_db" label="${tool.name} on ${on_string}: Contigs Db"/>
        <data name="output_structure_db" format="anvio_structure_db" format_source="input_structure_db" metadata_source="input_structure_db" label="${tool.name} on ${on_string}: Structure Db"/>
        <data name="output_file" format="anvio_variability" format_source="input_output_file" metadata_source="input_output_file" label="${tool.name} on ${on_string}: Output File"/>
        <data name="GALAXY_ANVIO_LOG" format="txt" label="${tool.name} on ${on_string}: Log"/>
    </outputs>
    <help><![CDATA[
        usage: anvi-gen-variability-profile [-h] [--splits-of-interest FILE]
                              [-C COLLECTION_NAME] [-b BIN_NAME]
                              [--genes-of-interest FILE]
                              [--gene-caller-ids GENE_CALLER_IDS] -p
                              PROFILE_DB -c CONTIGS_DB [-s STRUCTURE_DB]
                              [-o VARIABILITY_PROFILE]
                              [--samples-of-interest FILE] [--quince-mode]
                              [--include-contig-names] [--include-split-names]
                              [--compute-gene-coverage-stats]
                              [--engine ENGINE]
                              [--num-positions-from-each-split INT]
                              [--min-coverage-in-each-sample INT] [-r FLOAT]
                              [-z FLOAT] [-j FLOAT] [-a FLOAT]
                              [-x NUM_SAMPLES] [--only-if-structure]
                              [--skip-synonymity]

Extract information for variable positions

optional arguments:
  -h, --help            show this help message and exit
  --splits-of-interest FILE
                        A file with split names. There should be only one
                        column in the file, and each line should correspond to
                        a unique split name.
  -C COLLECTION_NAME, --collection-name COLLECTION_NAME
                        Collection name.
  -b BIN_NAME, --bin-id BIN_NAME
                        Bin name you are interested in.
  --genes-of-interest FILE
                        A file with anvi'o gene caller IDs. There should be
                        only one column in the file, and each line should
                        correspond to a unique gene caller id (without a
                        column header).
  --gene-caller-ids GENE_CALLER_IDS
                        Gene caller ids. Multiple of them can be declared
                        separated by a delimiter (the default is a comma). In
                        anvi-gen-variability-profile, if you declare nothing
                        you will get all genes matching your other filtering
                        criteria. In other programs, you may get everything,
                        nothing, or an error. It really depends on the
                        situation. Fortunately mistakes are cheap, so it's
                        worth a try.
  -p PROFILE_DB, --profile-db PROFILE_DB
                        Anvi'o profile database
  -c CONTIGS_DB, --contigs-db CONTIGS_DB
                        Anvi'o contigs database generated by 'anvi-gen-
                        contigs'
  -s STRUCTURE_DB, --structure-db STRUCTURE_DB
                        Anvi'o structure database.
  -o VARIABILITY_PROFILE, --output-file VARIABILITY_PROFILE
                        File path to store results.
  --samples-of-interest FILE
                        A file with samples names. There should be only one
                        column in the file, and each line should correspond to
                        a unique sample name (without a column header).
  --quince-mode         The default behavior is to report base frequencies of
                        nucleotide positions only if there is any variation
                        reported during profiling (which by default uses some
                        heuristics to minimize the impact of error-driven
                        variation). So, if there are 10 samples, and a given
                        position has been reported as a varaible site during
                        profiling in only one of those samples, there will be
                        no information will be stored in the database for the
                        remaining 9. When this flag is used, we go back to
                        each sample, and report base frequencies for each
                        sample at this position even if they do not vary. It
                        will take considerably longer to report when this flag
                        is on, and the use of it will increase the file size
                        dramatically, however it is inevitable for some
                        statistical approaches (as well as for some beautiful
                        visualizations).
  --include-contig-names
                        Use this flag if you would like contig names for each
                        variable position to be included in the output file as
                        a column. By default, we do not include contig names
                        since they can practically double the output file size
                        without any actual benefit in most cases.
  --include-split-names
                        Use this flag if you would like split names for each
                        variable position to be included in the output file as
                        a column.
  --compute-gene-coverage-stats
                        If provided, gene coverage statistics will be appended
                        to the table for each entry. This is very useful
                        information, but will not be included by default
                        because it is an expensive opeation, and you a busy
                        person.
  --engine ENGINE       Varaibility engine. The default is 'NT'.
  --num-positions-from-each-split INT
                        Each split may have one or more variable positions. By
                        default, anvi'o will report every SNV position found
                        in a given split. This parameter will help you to
                        define a cutoff for the maximum number of SNVs to be
                        reported from a split (if the number of SNVs is more
                        than the number you declare using this parameter, the
                        positions will be randomly subsampled).
  --min-coverage-in-each-sample INT
                        Minimum coverage of a given variable nucleotide
                        position in all samples. If a nucleotide position is
                        covered less than this value even in one sample, it
                        will be removed from the analysis. Default is 0.
  -r FLOAT, --min-departure-from-reference FLOAT
                        Takes a value between 0 and 1, where 1 is maximum
                        divergence from the reference. Default is 0.000000.
                        The reference here observation that corresponds to a
                        given position in the mapped context.
  -z FLOAT, --max-departure-from-reference FLOAT
                        Similar to '--min-departure-from-reference', but
                        defines an upper limit for divergence. The default is
                        1.000000.
  -j FLOAT, --min-departure-from-consensus FLOAT
                        Takes a value between 0 and 1, where 1 is maximum
                        divergence from the consensus for a given position.
                        The default is 0.000000. The consensus is the most
                        frequent observation at a given positon.
  -a FLOAT, --max-departure-from-consensus FLOAT
                        Similar to '--min-departure-from-consensus', but
                        defines an upper limit for divergence. The default is
                        1.000000.
  -x NUM_SAMPLES, --min-occurrence NUM_SAMPLES
                        Minimum number of samples a nucleotide position should
                        be reported as variable. Default is 1. If you set it
                        to 2, for instance, each eligable variable position
                        will be expected to appear in at least two samples,
                        which will reduce the impact of stochastic, or
                        unintelligeable varaible positions.
  --only-if-structure   If provided, your genes of interest will be further
                        subset to only include genes with structures in your
                        structure database, and therefore must be supplied in
                        conjunction with a structure database, i.e. `-s
                        <your_structure_database>`. If you did not specify
                        genes of interest, ALL genes will be subset to those
                        that have structures.
  --skip-synonymity     Computing synonymity can be an expensive operation for
                        large data sets. Provide this flag to skip computing
                        synonymity. It only makes sense to provide this flag
                        when using --engine CDN.

DATABASES:
  Declaring relevant anvi'o databases. First things first.

SPLITS:
  Declaring relevant splits for the analysis. There are three ways to do it:
  1) you can give a file path with split names, 2) you can provide a
  collection id with a bin name, or 3) you can give a list or a file path
  containing gene caller ids.

OUTPUT:
  Output file and output style

EXTRAS:
  Parameters that will help you to do a very precise analysis. If you
  declare nothing from this bunch, you will get "everything" to play with,
  which is not necessarily a good thing...

    ]]></help>
    <citations>
        <citation type="doi">10.7717/peerj.1319</citation>
        <citation type="bibtex">@ARTICLE{Blankenberg19-anvio,
   author = {Daniel Blankenberg, et al},
   title = {In preparation..},
   }</citation>
    </citations>
</tool>