<tool id="anvi_interactive" name="anvi-interactive" version="5.3.0" tool_type="interactive">
    <description>Start an anvi'o server for the interactive interface</description>
    <requirements>
        <requirement type="package" version="5.3.0">anvio</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <version_command>anvi-interactive --version</version_command>
    <command><![CDATA[
        
    #if $input_profile_db:
        cp -R '${input_profile_db.extra_files_path}' '${output_profile_db.extra_files_path}'
    #else
        echo ''
    #end if
 && 

    #if $input_contigs_db:
        cp -R '${input_contigs_db.extra_files_path}' '${output_contigs_db.extra_files_path}'
    #else
        echo ''
    #end if
 &&
 anvi-interactive
--profile-db '${output_profile_db.extra_files_path}/PROFILE.db'

--contigs-db '${output_contigs_db.extra_files_path}/CONTIGS.db'


#if $str( $collection_name ):
    --collection-name '${collection_name}'
#end if

${manual_mode}


#if $fasta_file:
    --fasta-file '${fasta_file}'
#end if


#if $view_data:
    --view-data '${view_data}'
#end if


#if $tree:
    --tree '${tree}'
#end if


#if $items_order:
    --items-order '${items_order}'
#end if


#if $additional_view:
    --additional-view '${additional_view}'
#end if


#if $additional_layers:
    --additional-layers '${additional_layers}'
#end if


#if $str( $view ):
    --view '${view}'
#end if


#if $str( $title ):
    --title '${title}'
#end if


#if $str( $taxonomic_level ):
    --taxonomic-level '${taxonomic_level}'
#end if

${split_hmm_layers}

${hide_outlier_SNVs}


#if $str( $state_autoload ):
    --state-autoload '${state_autoload}'
#end if


#if $str( $collection_autoload ):
    --collection-autoload '${collection_autoload}'
#end if


#if $export_svg:
    --export-svg '${export_svg}'
#end if

${gene_mode}


#if $str( $bin_id ):
    --bin-id '${bin_id}'
#end if

${show_views}

${skip_check_names}


#if $output_dir:
    --output-dir '${output_dir.extra_files_path}'
#end if

${dry_run}

${show_states}

${list_collections}

${skip_init_functions}

${skip_auto_ordering}


#if $str( $distance ):
    --distance '${distance}'
#end if


#if $str( $linkage ):
    --linkage '${linkage}'
#end if


#if $str( $ip_address ):
    --ip-address '${ip_address}'
#end if


#if $str( $port_number ):
    --port-number '${port_number}'
#end if


#if $browser_path:
    --browser-path '${browser_path}'
#end if

${read_only}

${server_only}

${password_protected}

&> '${GALAXY_ANVIO_LOG}'

    ]]></command>
    <inputs>
        <param name="input_profile_db" type="data" label="Profile Db" format="anvio_profile_db" optional="True" multiple="False" argument="--profile-db" help="Anvi'o profile database"/>
        <param name="input_contigs_db" type="data" label="Contigs Db" format="anvio_contigs_db" optional="True" multiple="False" argument="--contigs-db" help="Anvi'o contigs database generated by 'anvi-gen-contigs'"/>
        <param name="collection_name" type="text" label="Collection Name" value="" optional="True" argument="--collection-name" help="If you have a collection in your profile database, you can use this flag to start the interactive interface with a tree showing your bins in your collection, instead of each split. This is very useful when you have imported your external binning results into anvi'o, and want to see the distribution of your bins across samples. In these cases anvi'o will cluster your bins and based on multiple metrics. Because this particular clustering will be done on the fly within anvi'o interactive class, you get to define a disntance metric and a linkage method using --linkage and --distance parameters if you want!"/>
        <param name="manual_mode" type="boolean" label="Manual Mode" truevalue="--manual-mode" falsevalue="" checked="False" optional="True" argument="--manual-mode" help="Using this flag, you can run the interactive interface in an ad hoc manner using input files you curated instead of standard output files generated by an anvi'o run. In the manual mode you will be asked to provide a profile database. In this mode a profile database is only used to store 'state' of the interactive interface so you can reload your visual settings when you re-analyze the same files again. If the profile database you provide does not exist, anvi'o will create an empty one for you."/>
        <param name="fasta_file" type="data" label="Fasta File" format="fasta" optional="True" multiple="False" argument="--fasta-file" help="A FASTA-formatted input file"/>
        <param name="view_data" type="data" label="View Data" format="tabular" optional="True" multiple="False" argument="--view-data" help="A TAB-delimited file for view data"/>
        <param name="tree" type="data" label="Tree" format="newick" optional="True" multiple="False" argument="--tree" help="NEWICK formatted tree structure"/>
        <param name="items_order" type="data" label="Items Order" format="txt" optional="True" multiple="False" argument="--items-order" help="A flat file that contains the order of items you wish the display using the interactive interface. You may want to use this if you have a specific order of items in your mind, and do not want to display a tree in the middle (or simply you don't have one). The file format is simple: each line should have an item name, and there should be no header."/>
        <param name="additional_view" type="data" label="Additional View" format="tabular" optional="True" multiple="False" argument="--additional-view" help="A TAB-delimited file for an additional view to be used in the interface. This file file should contain all split names, and values for each of them in all samples. Each column in this file must correspond to a sample name. Content of this file will be called 'user_view', which will be available as a new item in the 'views' combo box in the interface"/>
        <param name="additional_layers" type="data" label="Additional Layers" format="tabular" optional="True" multiple="False" argument="--additional-layers" help="A TAB-delimited file for additional layers for splits. The first column of this file must be split names, and the remaining columns should be unique attributes. The file does not need to contain all split names, or values for each split in every column. Anvi'o will try to deal with missing data nicely. Each column in this file will be visualized as a new layer in the tree."/>
        <param name="view" type="text" label="View" value="" optional="True" argument="--view" help="Start the interface with a pre-selected view. To see a list of available views, use --show-views flag."/>
        <param name="title" type="text" label="Title" value="" optional="True" argument="--title" help="Title for the interface. If you are working with a RUNINFO dict, the title will be determined based on information stored in that file. Regardless, you can override that value using this parameter. If you are not using a anvio RUNINFO dictionary, a meaningful title will appear in the interface only if you define one using this parameter."/>
        <param name="taxonomic_level" type="text" label="Taxonomic Level" value="t_genus" optional="True" argument="--taxonomic-level" help="The taxonomic level to use. The default is '%(default)s'. Only relevant if the anvi'o ontigs database contains taxonomic annotations."/>
        <param name="split_hmm_layers" type="boolean" label="Split Hmm Layers" truevalue="--split-hmm-layers" falsevalue="" checked="False" optional="True" argument="--split-hmm-layers" help="When declared, this flag tells the interface to split every gene found in HMM searches that were performed against non-singlecopy gene HMM profiles into their own layer. Please see the documentation for details."/>
        <param name="hide_outlier_SNVs" type="boolean" label="Hide Outlier Snvs" truevalue="--hide-outlier-SNVs" falsevalue="" checked="False" optional="True" argument="--hide-outlier-SNVs" help="During profiling, anvi'o marks positions of single-nucleotide variations (SNVs) that originate from places in contigs where coverage values are a bit 'sketchy'. If you would like to avoid SNVs in those positions of splits in applicable projects you can use this flag, and the interafce would hide SNVs that are marked as 'outlier' (although it is clearly the best to see everything, no one will judge you if you end up using this flag) (plus, there may or may not be some historical data on this here: https://github.com/meren/anvio/issues/309)."/>
        <param name="state_autoload" type="text" label="State Autoload" value="" optional="True" argument="--state-autoload" help="Automatically load previous saved state and draw tree. To see a list of available states, use --show-states flag."/>
        <param name="collection_autoload" type="text" label="Collection Autoload" value="" optional="True" argument="--collection-autoload" help="Automatically load a collection and draw tree. To see a list of available collections, use --list-collections flag."/>
        <param name="export_svg" type="data" label="Export Svg" format="txt" optional="True" multiple="False" argument="--export-svg" help="The SVG output file path."/>
        <param name="gene_mode" type="boolean" label="Gene Mode" truevalue="--gene-mode" falsevalue="" checked="False" optional="True" argument="--gene-mode" help="Initiate the interactive interface in &quot;gene mode&quot;. In this mode, the items are genes (instead of splits of contigs). The following views are avilable: detection (the detection value of each gene in each sample). The mean_coverage (the mean coverage of genes). The non_outlier_mean_coverage (the mean coverage of the non-outlier nucleotide positions of each gene in each sample (median absolute deviation is used to remove outliers per gene per sample)). The non_outlier_coverage_std view (standrad deviation of the coverage of non-outlier positions of genes in samples). You can also choose to order items and layers according to each one of the aforementioned views. In addition, all layer ordering that are avialable in the regular mode (i.e. the full mode where you have contigs/splits) are also available in &quot;gene mode&quot;, so that, for example, you can choose to order the layers according to &quot;detection&quot;, and that would be the order according to the detection values of splits, whereas if you choose &quot;genes_detections&quot; then the order of layers would be according to the detection values of genes. Inspection and sequence functionality are available (through the right-click menu), except now sequences are of the specific gene. Inspection has now two options available: &quot;Inspect Context&quot;, which brings you to the inspection page of the split to which the gene belongs where the inspected gene will be highlighted in yellow in the bottom, and &quot;Inspect Gene&quot;, whih opens the inspection page only for the gene and 100 nts around each side of it (the purpose of this option is to make the inspection page load faster if you only want to look at the nucleotide coverage of a specific gene). NOTICE: You can't store states or collections in &quot;gene mode&quot;. However, you still can make fake selections, and create fake bins for your viewing covenience only (smiley). Search options are available, and you can even search for functions if you have them in your contigs database. ANOTHER NOTICE: loading this mode might take a while if your bin has many genes, and your profile database has many samples, this is beacause the gene coverages stats are computed in an ad-hoc manner when you load this mode, we know this is not ideal and we plan to improve that (along with other things). If you have suggestions/complaints regarding this mode please comment on this github issue: https://goo.gl/yHhRei. Please refer to the online tutorial for more information."/>
        <param name="bin_id" type="text" label="Bin Id" value="" optional="True" argument="--bin-id" help="Bin name you are interested in."/>
        <param name="show_views" type="boolean" label="Show Views" truevalue="--show-views" falsevalue="" checked="False" optional="True" argument="--show-views" help="When declared, the program will show a list of available views, and exit."/>
        <param name="skip_check_names" type="boolean" label="Skip Check Names" truevalue="--skip-check-names" falsevalue="" checked="False" optional="True" argument="--skip-check-names" help="For debugging purposes. You should never really need it."/>
        <param name="dry_run" type="boolean" label="Dry Run" truevalue="--dry-run" falsevalue="" checked="False" optional="True" argument="--dry-run" help="Don't do anything real. Test everything, and stop right before wherever the developer said 'well, this is enough testing', and decided to print out results."/>
        <param name="show_states" type="boolean" label="Show States" truevalue="--show-states" falsevalue="" checked="False" optional="True" argument="--show-states" help="When declared the program will print all available states and exit."/>
        <param name="list_collections" type="boolean" label="List Collections" truevalue="--list-collections" falsevalue="" checked="False" optional="True" argument="--list-collections" help="Show available collections and exit."/>
        <param name="skip_init_functions" type="boolean" label="Skip Init Functions" truevalue="--skip-init-functions" falsevalue="" checked="False" optional="True" argument="--skip-init-functions" help="When declared, function calls for genes will not be initialized (therefore will be missing from all relevant interfaces or output files). The use of this flag may reduce the memory fingerprint and processing time for large datasets."/>
        <param name="skip_auto_ordering" type="boolean" label="Skip Auto Ordering" truevalue="--skip-auto-ordering" falsevalue="" checked="False" optional="True" argument="--skip-auto-ordering" help="When declared, the attempt to include automatically generated orders of items based on additional data is skipped. In case those buggers cause issues with your data, and you still want to see your stuff and deal with the other issue maybe later."/>
        <param name="distance" type="text" label="Distance" value="euclidean" optional="True" argument="--distance" help='The distance metric for the hierarchical clustering. Only relevant if you are running the interactive interface in "collection" mode. The default is "%(default)s".'/>
        <param name="linkage" type="text" label="Linkage" value="ward" optional="True" argument="--linkage" help='The linkage method for the hierarchical clustering. Only relevant if you are running the interactive interface in "collection" mode. The default is "%(default)s".'/>
        <param name="ip_address" type="text" label="Ip Address" value="0.0.0.0" optional="True" argument="--ip-address" help="IP address for the HTTP server. The default ip address (%(default)s) should work just fine for most."/>
        <param name="port_number" type="integer" label="Port Number" value="" optional="True" argument="--port-number" help="Port number to use for anvi'o services. If nothing is declared, anvi'o will try to find a suitable port number, starting from the default port number, 8080."/>
        <param name="browser_path" type="data" label="Browser Path" format="txt" optional="True" multiple="False" argument="--browser-path" help="By default, anvi'o will use your default browser to launch the interactive interface. If you would like to use something else than your system default, you can provide a full path for an alternative browser using this parameter, and hope for the best. For instance we are using this parameter to call Google's experimental browser, Canary, which performs better with demanding visualizations."/>
        <param name="read_only" type="boolean" label="Read Only" truevalue="--read-only" falsevalue="" checked="False" optional="True" argument="--read-only" help="When the interactive interface is started with this flag, all 'database write' operations will be disabled."/>
        <param name="server_only" type="boolean" label="Server Only" truevalue="--server-only" falsevalue="" checked="False" optional="True" argument="--server-only" help="The default behavior is to start the local server, and fire up a browser that connects to the server. If you have other plans, and want to start the server without calling the browser, this is the flag you need."/>
        <param name="password_protected" type="boolean" label="Password Protected" truevalue="--password-protected" falsevalue="" checked="False" optional="True" argument="--password-protected" help="If this flag is set, command line tool will ask you to enter a password and interactive interface will be only accessible after entering same password. This option is recommended for shared machines like clusters or shared networks where computers are not isolated."/>
    </inputs>
    <outputs>
        <data name="output_profile_db" format="anvio_profile_db" format_source="input_profile_db" metadata_source="input_profile_db" label="${tool.name} on ${on_string}: Profile Db"/>
        <data name="output_contigs_db" format="anvio_contigs_db" format_source="input_contigs_db" metadata_source="input_contigs_db" label="${tool.name} on ${on_string}: Contigs Db"/>
        <data name="output_dir" format="anvio_profile_db" format_source="input_output_dir" metadata_source="input_output_dir" label="${tool.name} on ${on_string}: Output Dir"/>
        <data name="GALAXY_ANVIO_LOG" format="txt" label="${tool.name} on ${on_string}: Log"/>
    </outputs>
    <help><![CDATA[
        usage: anvi-interactive [-h] [-p PROFILE_DB] [-c CONTIGS_DB]
                              [-C COLLECTION_NAME] [--manual-mode] [-f FASTA]
                              [-d VIEW_DATA] [-t NEWICK]
                              [--items-order FLAT_FILE] [-V ADDITIONAL_VIEW]
                              [-A ADDITIONAL_LAYERS] [--view NAME]
                              [--title NAME]
                              [--taxonomic-level {t_phylum,t_class,t_order,t_family,t_genus,t_species}]
                              [--split-hmm-layers] [--hide-outlier-SNVs]
                              [--state-autoload NAME]
                              [--collection-autoload NAME]
                              [--export-svg FILE_PATH] [--gene-mode]
                              [-b BIN_NAME] [--show-views]
                              [--skip-check-names] [-o DIR_PATH] [--dry-run]
                              [--show-states] [--list-collections]
                              [--skip-init-functions] [--skip-auto-ordering]
                              [--distance DISTANCE_METRIC]
                              [--linkage LINKAGE_METHOD] [-I IP_ADDR] [-P INT]
                              [--browser-path PATH] [--read-only]
                              [--server-only] [--password-protected]

Start an anvi'o server for the interactive interface

optional arguments:
  -h, --help            show this help message and exit
  -p PROFILE_DB, --profile-db PROFILE_DB
                        Anvi'o profile database
  -c CONTIGS_DB, --contigs-db CONTIGS_DB
                        Anvi'o contigs database generated by 'anvi-gen-
                        contigs'
  -C COLLECTION_NAME, --collection-name COLLECTION_NAME
                        If you have a collection in your profile database, you
                        can use this flag to start the interactive interface
                        with a tree showing your bins in your collection,
                        instead of each split. This is very useful when you
                        have imported your external binning results into
                        anvi'o, and want to see the distribution of your bins
                        across samples. In these cases anvi'o will cluster
                        your bins and based on multiple metrics. Because this
                        particular clustering will be done on the fly within
                        anvi'o interactive class, you get to define a
                        disntance metric and a linkage method using --linkage
                        and --distance parameters if you want!
  --manual-mode         Using this flag, you can run the interactive interface
                        in an ad hoc manner using input files you curated
                        instead of standard output files generated by an
                        anvi'o run. In the manual mode you will be asked to
                        provide a profile database. In this mode a profile
                        database is only used to store 'state' of the
                        interactive interface so you can reload your visual
                        settings when you re-analyze the same files again. If
                        the profile database you provide does not exist,
                        anvi'o will create an empty one for you.
  -f FASTA, --fasta-file FASTA
                        A FASTA-formatted input file
  -d VIEW_DATA, --view-data VIEW_DATA
                        A TAB-delimited file for view data
  -t NEWICK, --tree NEWICK
                        NEWICK formatted tree structure
  --items-order FLAT_FILE
                        A flat file that contains the order of items you wish
                        the display using the interactive interface. You may
                        want to use this if you have a specific order of items
                        in your mind, and do not want to display a tree in the
                        middle (or simply you don't have one). The file format
                        is simple: each line should have an item name, and
                        there should be no header.
  -V ADDITIONAL_VIEW, --additional-view ADDITIONAL_VIEW
                        A TAB-delimited file for an additional view to be used
                        in the interface. This file file should contain all
                        split names, and values for each of them in all
                        samples. Each column in this file must correspond to a
                        sample name. Content of this file will be called
                        'user_view', which will be available as a new item in
                        the 'views' combo box in the interface
  -A ADDITIONAL_LAYERS, --additional-layers ADDITIONAL_LAYERS
                        A TAB-delimited file for additional layers for splits.
                        The first column of this file must be split names, and
                        the remaining columns should be unique attributes. The
                        file does not need to contain all split names, or
                        values for each split in every column. Anvi'o will try
                        to deal with missing data nicely. Each column in this
                        file will be visualized as a new layer in the tree.
  --view NAME           Start the interface with a pre-selected view. To see a
                        list of available views, use --show-views flag.
  --title NAME          Title for the interface. If you are working with a
                        RUNINFO dict, the title will be determined based on
                        information stored in that file. Regardless, you can
                        override that value using this parameter. If you are
                        not using a anvio RUNINFO dictionary, a meaningful
                        title will appear in the interface only if you define
                        one using this parameter.
  --taxonomic-level {t_phylum,t_class,t_order,t_family,t_genus,t_species}
                        The taxonomic level to use. The default is 't_genus'.
                        Only relevant if the anvi'o ontigs database contains
                        taxonomic annotations.
  --split-hmm-layers    When declared, this flag tells the interface to split
                        every gene found in HMM searches that were performed
                        against non-singlecopy gene HMM profiles into their
                        own layer. Please see the documentation for details.
  --hide-outlier-SNVs   During profiling, anvi'o marks positions of single-
                        nucleotide variations (SNVs) that originate from
                        places in contigs where coverage values are a bit
                        'sketchy'. If you would like to avoid SNVs in those
                        positions of splits in applicable projects you can use
                        this flag, and the interafce would hide SNVs that are
                        marked as 'outlier' (although it is clearly the best
                        to see everything, no one will judge you if you end up
                        using this flag) (plus, there may or may not be some
                        historical data on this here:
                        https://github.com/meren/anvio/issues/309).
  --state-autoload NAME
                        Automatically load previous saved state and draw tree.
                        To see a list of available states, use --show-states
                        flag.
  --collection-autoload NAME
                        Automatically load a collection and draw tree. To see
                        a list of available collections, use --list-
                        collections flag.
  --export-svg FILE_PATH
                        The SVG output file path.
  --gene-mode           Initiate the interactive interface in "gene mode". In
                        this mode, the items are genes (instead of splits of
                        contigs). The following views are avilable: detection
                        (the detection value of each gene in each sample). The
                        mean_coverage (the mean coverage of genes). The
                        non_outlier_mean_coverage (the mean coverage of the
                        non-outlier nucleotide positions of each gene in each
                        sample (median absolute deviation is used to remove
                        outliers per gene per sample)). The
                        non_outlier_coverage_std view (standrad deviation of
                        the coverage of non-outlier positions of genes in
                        samples). You can also choose to order items and
                        layers according to each one of the aforementioned
                        views. In addition, all layer ordering that are
                        avialable in the regular mode (i.e. the full mode
                        where you have contigs/splits) are also available in
                        "gene mode", so that, for example, you can choose to
                        order the layers according to "detection", and that
                        would be the order according to the detection values
                        of splits, whereas if you choose "genes_detections"
                        then the order of layers would be according to the
                        detection values of genes. Inspection and sequence
                        functionality are available (through the right-click
                        menu), except now sequences are of the specific gene.
                        Inspection has now two options available: "Inspect
                        Context", which brings you to the inspection page of
                        the split to which the gene belongs where the
                        inspected gene will be highlighted in yellow in the
                        bottom, and "Inspect Gene", whih opens the inspection
                        page only for the gene and 100 nts around each side of
                        it (the purpose of this option is to make the
                        inspection page load faster if you only want to look
                        at the nucleotide coverage of a specific gene).
                        NOTICE: You can't store states or collections in "gene
                        mode". However, you still can make fake selections,
                        and create fake bins for your viewing covenience only
                        (smiley). Search options are available, and you can
                        even search for functions if you have them in your
                        contigs database. ANOTHER NOTICE: loading this mode
                        might take a while if your bin has many genes, and
                        your profile database has many samples, this is
                        beacause the gene coverages stats are computed in an
                        ad-hoc manner when you load this mode, we know this is
                        not ideal and we plan to improve that (along with
                        other things). If you have suggestions/complaints
                        regarding this mode please comment on this github
                        issue: https://goo.gl/yHhRei. Please refer to the
                        online tutorial for more information.
  -b BIN_NAME, --bin-id BIN_NAME
                        Bin name you are interested in.
  --show-views          When declared, the program will show a list of
                        available views, and exit.
  --skip-check-names    For debugging purposes. You should never really need
                        it.
  -o DIR_PATH, --output-dir DIR_PATH
                        Directory path for output files
  --dry-run             Don't do anything real. Test everything, and stop
                        right before wherever the developer said 'well, this
                        is enough testing', and decided to print out results.
  --show-states         When declared the program will print all available
                        states and exit.
  --list-collections    Show available collections and exit.
  --skip-init-functions
                        When declared, function calls for genes will not be
                        initialized (therefore will be missing from all
                        relevant interfaces or output files). The use of this
                        flag may reduce the memory fingerprint and processing
                        time for large datasets.
  --skip-auto-ordering  When declared, the attempt to include automatically
                        generated orders of items based on additional data is
                        skipped. In case those buggers cause issues with your
                        data, and you still want to see your stuff and deal
                        with the other issue maybe later.
  --distance DISTANCE_METRIC
                        The distance metric for the hierarchical clustering.
                        Only relevant if you are running the interactive
                        interface in "collection" mode. The default is
                        "euclidean".
  --linkage LINKAGE_METHOD
                        The linkage method for the hierarchical clustering.
                        Only relevant if you are running the interactive
                        interface in "collection" mode. The default is "ward".
  -I IP_ADDR, --ip-address IP_ADDR
                        IP address for the HTTP server. The default ip address
                        (0.0.0.0) should work just fine for most.
  -P INT, --port-number INT
                        Port number to use for anvi'o services. If nothing is
                        declared, anvi'o will try to find a suitable port
                        number, starting from the default port number, 8080.
  --browser-path PATH   By default, anvi'o will use your default browser to
                        launch the interactive interface. If you would like to
                        use something else than your system default, you can
                        provide a full path for an alternative browser using
                        this parameter, and hope for the best. For instance we
                        are using this parameter to call Google's experimental
                        browser, Canary, which performs better with demanding
                        visualizations.
  --read-only           When the interactive interface is started with this
                        flag, all 'database write' operations will be
                        disabled.
  --server-only         The default behavior is to start the local server, and
                        fire up a browser that connects to the server. If you
                        have other plans, and want to start the server without
                        calling the browser, this is the flag you need.
  --password-protected  If this flag is set, command line tool will ask you to
                        enter a password and interactive interface will be
                        only accessible after entering same password. This
                        option is recommended for shared machines like
                        clusters or shared networks where computers are not
                        isolated.

DEFAULT INPUTS:
  The interavtive interface can be started with and without anvi'o
  databases. The default use assumes you have your profile and contigs
  database, however, it is also possible to start the interface using ad hoc
  input files. See 'MANUAL INPUT' section for required parameters.

MANUAL INPUTS:
  Mandatory input parameters to start the interactive interface without
  anvi'o databases.

ADDITIONAL STUFF:
  Parameters to provide additional layers, views, or layer data.

GENE MODE:
  Gene mode related parameters.

VISUALS RELATED:
  Parameters that give access to various adjustements regarding the
  interface.

SWEET PARAMS OF CONVENIENCE:
  Parameters and flags that are not quite essential (but nice to have).

SERVER CONFIGURATION:
  For power users.

    ]]></help>
    <citations>
        <citation type="doi">10.7717/peerj.1319</citation>
        <citation type="bibtex">@ARTICLE{Blankenberg19-anvio,
   author = {Daniel Blankenberg, et al},
   title = {In preparation..},
   }</citation>
    </citations>
</tool>