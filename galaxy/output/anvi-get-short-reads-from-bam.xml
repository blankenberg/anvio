<tool id="anvi_get_short_reads_from_bam" name="anvi-get-short-reads-from-bam" version="5.3.0" tool_type="default">
    <description>Get short reads back from a BAM file.</description>
    <requirements>
        <requirement type="package" version="5.3.0">anvio</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <version_command>anvi-get-short-reads-from-bam --version</version_command>
    <command><![CDATA[
        
    #if $input_bams:
        
        #for $gxy_i, $input_galaxy_bam in enumerate( $input_bams ):
        #if $gxy_i != 0:
            &&
        #end if
        ln -s '${input_galaxy_bam}' '${gxy_i}_input_bams.bam' && ln -s '${input_galaxy_bam.metadata.bam_index}' '${gxy_i}_input_bams.bam.bai'
        #end for
        
    #else
        echo ''
    #end if
 && 
cp -R '${input_profile_db.extra_files_path}' '${output_profile_db.extra_files_path}'
 && 
cp -R '${input_contigs_db.extra_files_path}' '${output_contigs_db.extra_files_path}'
 && 
mkdir ${output_file_prefix.extra_files_path}
 &&
 anvi-get-short-reads-from-bam

#if $input_bams:
    
        #for $gxy_i, $input_galaxy_bam in enumerate( $input_bams ):
         '${gxy_i}_input_bams.bam'
        #end for
        
#end if

--profile-db '${output_profile_db.extra_files_path}/PROFILE.db'

--contigs-db '${output_contigs_db.extra_files_path}/CONTIGS.db'


#if $str( $collection_name ):
    --collection-name '${collection_name}'
#end if


#if $str( $bin_id ):
    --bin-id '${bin_id}'
#end if


#if $bin_ids_file:
    --bin-ids-file '${bin_ids_file}'
#end if


#if $output_file:
    --output-file '${output_file}'
#end if


#if $str( $output_file_prefix ):
    --output-file-prefix 'output_file_prefix'
#end if

${split_R1_and_R2}

&> '${GALAXY_ANVIO_LOG}'

 &&
 ( cp output_file_prefix* '${output_file_prefix.extra_files_path}/' || echo '' )
    ]]></command>
    <inputs>
        <param name="input_bams" type="data" label="Input Bams" format="bam" optional="True" multiple="True" argument="" help="BAM file(s) to access to recover short reads"/>
        <param name="input_profile_db" type="data" label="Profile Db" format="anvio_profile_db" optional="False" multiple="False" argument="--profile-db" help="Anvi'o profile database"/>
        <param name="input_contigs_db" type="data" label="Contigs Db" format="anvio_contigs_db" optional="False" multiple="False" argument="--contigs-db" help="Anvi'o contigs database generated by 'anvi-gen-contigs'"/>
        <param name="collection_name" type="text" label="Collection Name" value="" optional="True" argument="--collection-name" help="Collection name."/>
        <param name="bin_id" type="text" label="Bin Id" value="" optional="True" argument="--bin-id" help="Bin name you are interested in."/>
        <param name="bin_ids_file" type="data" label="Bin Ids File" format="txt" optional="True" multiple="False" argument="--bin-ids-file" help="Text file for bins (each line should be a unique bin id)."/>
        <param name="split_R1_and_R2" type="boolean" label="Split R1 And R2" truevalue="--split-R1-and-R2" falsevalue="" checked="False" optional="True" argument="--split-R1-and-R2" help="When declared, this program outputs 3 FASTA files for paired-end reads: one for R1, one for R2, and one for unpaired reads."/>
    </inputs>
    <outputs>
        <data name="output_profile_db" format="anvio_profile_db" format_source="input_profile_db" metadata_source="input_profile_db" label="${tool.name} on ${on_string}: Profile Db"/>
        <data name="output_contigs_db" format="anvio_contigs_db" format_source="input_contigs_db" metadata_source="input_contigs_db" label="${tool.name} on ${on_string}: Contigs Db"/>
        <data name="output_file" format="txt" format_source="input_output_file" metadata_source="input_output_file" label="${tool.name} on ${on_string}: Output File"/>
        <data name="output_file_prefix" format="anvio_composite" format_source="input_output_file_prefix" metadata_source="input_output_file_prefix" label="${tool.name} on ${on_string}: Output File Prefix"/>
        <data name="GALAXY_ANVIO_LOG" format="txt" label="${tool.name} on ${on_string}: Log"/>
    </outputs>
    <help><![CDATA[
        usage: anvi-get-short-reads-from-bam [-h] -p PROFILE_DB -c CONTIGS_DB
                              [-C COLLECTION_NAME] [-b BIN_NAME]
                              [-B FILE_PATH] [-o FILE_PATH]
                              [-O FILENAME_PREFIX] [-X] [-Q]
                              BAM FILE[S] [BAM FILE[S] ...]

Get short reads back from a BAM file.

positional arguments:
  BAM FILE[S]           BAM file(s) to access to recover short reads

optional arguments:
  -h, --help            show this help message and exit
  -p PROFILE_DB, --profile-db PROFILE_DB
                        Anvi'o profile database
  -c CONTIGS_DB, --contigs-db CONTIGS_DB
                        Anvi'o contigs database generated by 'anvi-gen-
                        contigs'
  -C COLLECTION_NAME, --collection-name COLLECTION_NAME
                        Collection name.
  -b BIN_NAME, --bin-id BIN_NAME
                        Bin name you are interested in.
  -B FILE_PATH, --bin-ids-file FILE_PATH
                        Text file for bins (each line should be a unique bin
                        id).
  -o FILE_PATH, --output-file FILE_PATH
                        File path to store results.
  -O FILENAME_PREFIX, --output-file-prefix FILENAME_PREFIX
                        A prefix to be used while naming the output files (no
                        file type extensions please; just a prefix).
  -X, --gzip-output     When declared, output file(s) will be gzip compressed
                        and the extension `.gz` will be added.
  -Q, --split-R1-and-R2
                        When declared, this program outputs 3 FASTA files for
                        paired-end reads: one for R1, one for R2, and one for
                        unpaired reads.

    ]]></help>
    <citations>
        <citation type="doi">10.7717/peerj.1319</citation>
        <citation type="bibtex">@ARTICLE{Blankenberg19-anvio,
   author = {Daniel Blankenberg, et al},
   title = {In preparation..},
   }</citation>
    </citations>
</tool>