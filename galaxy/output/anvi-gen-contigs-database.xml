<tool id="anvi_gen_contigs_database" name="anvi-gen-contigs-database" version="5.2">
    <description>Generate a new anvio contigs database.</description>
    <requirements>
        <requirement type="package" version="5.2">anvio</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <version_command>anvi-gen-contigs-database --version</version_command>
    <command><![CDATA[
        mkdir '${output_db_path.extra_files_path}'

 &&
 anvi-gen-contigs-database
--contigs-fasta '${contigs_fasta}'


#if $str( $project_name ):
    --project-name '${project_name}'
#end if

--output-db-path '${output_db_path.extra_files_path}/CONTIGS.db'


#if $description:
    --description '${description}'
#end if


#if $str( $split_length ):
    --split-length '${split_length}'
#end if


#if $str( $kmer_size ):
    --kmer-size '${kmer_size}'
#end if

${skip_gene_calling}


#if $str( $prodigal_translation_table ):
    --prodigal-translation-table '${prodigal_translation_table}'
#end if


#if $external_gene_calls:
    --external-gene-calls '${external_gene_calls}'
#end if

${ignore_internal_stop_codons}

${skip_mindful_splitting}

&> '${GALAXY_ANVIO_LOG}'

 &&
ls -lahR
    ]]></command>
    <inputs>
        <param name="contigs_fasta" type="data" label="Contigs Fasta" format="fasta" optional="False" multiple="False" argument="--contigs-fasta" help="The FASTA file that contains reference sequences you mapped your samples against. This could be a reference genome, or contigs from your assembler. Contig names in this file must match to those in other input files. If there is a problem anvi'o will gracefully complain about it."/>
        <param name="project_name" type="text" label="Project Name" value="" optional="True" argument="--project-name" help="Name of the project. Please choose a short but descriptive name (so anvi'o can use it whenever she needs to name an output file, or add a new table in a database, or name her first born)."/>
        <param name="description" type="data" label="Description" format="tabular" optional="True" multiple="False" argument="--description" help="A plain text file that contains some description about the project. You can use Markdwon syntax. The description text will be rendered and shown in all relevant interfaces, including the anvi'o interactive interface, or anvi'o summary outputs."/>
        <param name="split_length" type="integer" label="Split Length" value="20000" optional="True" argument="--split-length" help="Anvi'o splits very long contigs into smaller pieces, without actually splitting them for real. These 'virtual' splits improves the efficacy of the visualization step, and changing the split size gives freedom to the user to adjust the resolution of their display when necessary. The default value is (%(default)d). If you are planning to use your contigs database for metagenomic binning, we advise you to not go below 10,000 (since the lower the split size is, the more items to show in the display, and decrasing the split size does not really help much to binning). But if you are thinking about using this parameter for ad hoc investigations other than binning, you should ignore our advice, and set the split size as low as you want. If you do not want your contigs to be split, you can set the split size to '0' or any other negative integer (lots of unnecessary freedom here, enjoy!)."/>
        <param name="kmer_size" type="integer" label="Kmer Size" value="4" optional="True" argument="--kmer-size" help="K-mer size for k-mer frequency calculations. The default k-mer size for composition-based analyses is 4, historically. Although tetra-nucleotide frequencies seem to offer the the sweet spot of sensitivity, information density, and manageable number of dimensions for clustering approaches, you are welcome to experiment (but maybe you should leave it as is for your first set of analyses)."/>
        <param name="skip_gene_calling" type="boolean" label="Skip Gene Calling" truevalue="--skip-gene-calling" falsevalue="" checked="False" optional="True" argument="--skip-gene-calling" help="By default, generating an anvi'o contigs database includes the identification of open reading frames in contigs by running a bacterial gene caller. Declaring this flag will by-pass that process. If you prefer, you can later import your own gene calling results into the database."/>
        <param name="prodigal_translation_table" type="integer" label="Prodigal Translation Table" value="" optional="True" argument="--prodigal-translation-table" help="This is a parameter to pass to the Prodigal for a specific translation table. This parameter corresponds to the paramter `-g` in Prodigal, the default value of which is 11 (so if you do not set anything, it will be set to 11 in Prodigal runtime. Please refer to the Prodigal documentation to determina what is the right translation table for you if you think you need it.)"/>
        <param name="external_gene_calls" type="data" label="External Gene Calls" format="tabular" optional="True" multiple="False" argument="--external-gene-calls" help="A TAB-delimited file to utilize external gene calls. The file must have these columns: 'gene_callers_id' (a unique integer number for each gene call, start from 1), 'contig' (the contig name the gene call is found), 'start' (start position, integer), 'stop' (stop position, integer), 'direction' (the direction of the gene open reading frame; can be 'f' or 'r'), 'partial' (whether it is a complete gene call, or a partial one; must be 1 for partial calls, and 0 for complete calls), 'source' (the gene caller), and 'version' (the version of the gene caller, i.e., v2.6.7 or v1.0). An example file can be found via the URL https://goo.gl/TqCWT2"/>
        <param name="ignore_internal_stop_codons" type="boolean" label="Ignore Internal Stop Codons" truevalue="--ignore-internal-stop-codons" falsevalue="" checked="False" optional="True" argument="--ignore-internal-stop-codons" help="This is only relevant when you have an external gene calls file. If anvi'o figures out that your custom gene calls result in amino acid seqeunces with stop codons in the middle, it will complain about it. You can use this flag to tell anvi'o to don't check for internal stop codons, EVEN THOUGH IT MEANS THERE IS MOST LIKELY SOMETHING WRONG WITH YOUR EXTERNAL GENE CALLS FILE. Anvi'o will understand that sometimes we don't want to care, and will not judge you. Instead, it will replace every stop codon residue in the amino acid sequence with an 'X' character. Please let us know if you used this and things failed, so we can tell you that you shouldn't have really used it if you didn't like failures at the first place (smiley)."/>
        <param name="skip_mindful_splitting" type="boolean" label="Skip Mindful Splitting" truevalue="--skip-mindful-splitting" falsevalue="" checked="False" optional="True" argument="--skip-mindful-splitting" help="By default, anvi'o attempts to prevent soft-splitting large contigs by cutting prper gene calles to make sure a single gene is not broken into multiple splits. This requires a careful examination of where genes start and end, and to find best locations to split contigs with respect to this informtion. So, when the user asks for a split size of, say, 1,000, it serves as a mere suggestion. When this flag is used, anvi'o does what the user wants and creates splits at desired lengths (although some functionality may become unavailable for the projects that rely on a contigs database that is initiated this way)."/>
    </inputs>
    <outputs>
        <data name="output_db_path" format="anvio_contigs_db" format_source="input_output_db_path" metadata_source="input_output_db_path" label="${tool.name} on ${on_string}: Output Db Path"/>
        <data name="GALAXY_ANVIO_LOG" format="txt" label="${tool.name} on ${on_string}: Log"/>
    </outputs>
    <help><![CDATA[
        usage: anvi-gen-contigs-database [-h] -f FASTA [-n PROJECT_NAME]
                              [-o DB_FILE_PATH] [--description TEXT_FILE]
                              [-L INT] [-K INT] [--skip-gene-calling]
                              [--prodigal-translation-table INT]
                              [--external-gene-calls GENE-CALLS]
                              [--ignore-internal-stop-codons]
                              [--skip-mindful-splitting]

Generate a new anvio contigs database.

optional arguments:
  -h, --help            show this help message and exit
  -f FASTA, --contigs-fasta FASTA
                        The FASTA file that contains reference sequences you
                        mapped your samples against. This could be a reference
                        genome, or contigs from your assembler. Contig names
                        in this file must match to those in other input files.
                        If there is a problem anvi'o will gracefully complain
                        about it.
  -n PROJECT_NAME, --project-name PROJECT_NAME
                        Name of the project. Please choose a short but
                        descriptive name (so anvi'o can use it whenever she
                        needs to name an output file, or add a new table in a
                        database, or name her first born).
  -o DB_FILE_PATH, --output-db-path DB_FILE_PATH
                        Output file path for the new database.
  --description TEXT_FILE
                        A plain text file that contains some description about
                        the project. You can use Markdwon syntax. The
                        description text will be rendered and shown in all
                        relevant interfaces, including the anvi'o interactive
                        interface, or anvi'o summary outputs.
  -L INT, --split-length INT
                        Anvi'o splits very long contigs into smaller pieces,
                        without actually splitting them for real. These
                        'virtual' splits improves the efficacy of the
                        visualization step, and changing the split size gives
                        freedom to the user to adjust the resolution of their
                        display when necessary. The default value is (20000).
                        If you are planning to use your contigs database for
                        metagenomic binning, we advise you to not go below
                        10,000 (since the lower the split size is, the more
                        items to show in the display, and decrasing the split
                        size does not really help much to binning). But if you
                        are thinking about using this parameter for ad hoc
                        investigations other than binning, you should ignore
                        our advice, and set the split size as low as you want.
                        If you do not want your contigs to be split, you can
                        set the split size to '0' or any other negative
                        integer (lots of unnecessary freedom here, enjoy!).
  -K INT, --kmer-size INT
                        K-mer size for k-mer frequency calculations. The
                        default k-mer size for composition-based analyses is
                        4, historically. Although tetra-nucleotide frequencies
                        seem to offer the the sweet spot of sensitivity,
                        information density, and manageable number of
                        dimensions for clustering approaches, you are welcome
                        to experiment (but maybe you should leave it as is for
                        your first set of analyses).
  --skip-gene-calling   By default, generating an anvi'o contigs database
                        includes the identification of open reading frames in
                        contigs by running a bacterial gene caller. Declaring
                        this flag will by-pass that process. If you prefer,
                        you can later import your own gene calling results
                        into the database.
  --prodigal-translation-table INT
                        This is a parameter to pass to the Prodigal for a
                        specific translation table. This parameter corresponds
                        to the paramter `-g` in Prodigal, the default value of
                        which is 11 (so if you do not set anything, it will be
                        set to 11 in Prodigal runtime. Please refer to the
                        Prodigal documentation to determina what is the right
                        translation table for you if you think you need it.)
  --external-gene-calls GENE-CALLS
                        A TAB-delimited file to utilize external gene calls.
                        The file must have these columns: 'gene_callers_id' (a
                        unique integer number for each gene call, start from
                        1), 'contig' (the contig name the gene call is found),
                        'start' (start position, integer), 'stop' (stop
                        position, integer), 'direction' (the direction of the
                        gene open reading frame; can be 'f' or 'r'), 'partial'
                        (whether it is a complete gene call, or a partial one;
                        must be 1 for partial calls, and 0 for complete
                        calls), 'source' (the gene caller), and 'version' (the
                        version of the gene caller, i.e., v2.6.7 or v1.0). An
                        example file can be found via the URL
                        https://goo.gl/TqCWT2
  --ignore-internal-stop-codons
                        This is only relevant when you have an external gene
                        calls file. If anvi'o figures out that your custom
                        gene calls result in amino acid seqeunces with stop
                        codons in the middle, it will complain about it. You
                        can use this flag to tell anvi'o to don't check for
                        internal stop codons, EVEN THOUGH IT MEANS THERE IS
                        MOST LIKELY SOMETHING WRONG WITH YOUR EXTERNAL GENE
                        CALLS FILE. Anvi'o will understand that sometimes we
                        don't want to care, and will not judge you. Instead,
                        it will replace every stop codon residue in the amino
                        acid sequence with an 'X' character. Please let us
                        know if you used this and things failed, so we can
                        tell you that you shouldn't have really used it if you
                        didn't like failures at the first place (smiley).
  --skip-mindful-splitting
                        By default, anvi'o attempts to prevent soft-splitting
                        large contigs by cutting prper gene calles to make
                        sure a single gene is not broken into multiple splits.
                        This requires a careful examination of where genes
                        start and end, and to find best locations to split
                        contigs with respect to this informtion. So, when the
                        user asks for a split size of, say, 1,000, it serves
                        as a mere suggestion. When this flag is used, anvi'o
                        does what the user wants and creates splits at desired
                        lengths (although some functionality may become
                        unavailable for the projects that rely on a contigs
                        database that is initiated this way).

MANDATORY INPUTS:
  Things you really need to provide to be in business.

OPTIONAL INPUTS:
  Things you may want to tweak.

GENES IN CONTIGS:
  Expert thingies.

    ]]></help>
    <citations>
        <citation type="doi">10.7717/peerj.1319</citation>
    </citations>
</tool>