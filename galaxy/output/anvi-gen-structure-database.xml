<tool id="anvi_gen_structure_database" name="anvi-gen-structure-database" version="5.3.0" tool_type="default">
    <description>Identifies genes in your contigs database that encode proteins that are                                                   homologous to proteins with solved structures. If sufficiently similar                                                   homologs are identified, they are used as structural templates to predict                                                   the 3D structure of proteins in your contigs database. This means we are                                                   at the mercy of structural biologists: if they have not solved a structure                                                   of a protein sufficiently similar in AA sequence to yours, this isn't going                                                   to work. But it's worth a try! The software we are using is MODELLER, more                                                   of which can be learned about at https://salilab.org/modeller/, or in our                                                   tutorial, which doesn't exist yet FIXME</description>
    <requirements>
        <requirement type="package" version="5.3.0">anvio</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <version_command>anvi-gen-structure-database --version</version_command>
    <command><![CDATA[
        cp -R '${input_contigs_db.extra_files_path}' '${output_contigs_db.extra_files_path}'
 && 
mkdir '${output_db_path.extra_files_path}'

 &&
 anvi-gen-structure-database
--contigs-db '${output_contigs_db.extra_files_path}/CONTIGS.db'


#if $genes_of_interest:
    --genes-of-interest '${genes_of_interest}'
#end if


#if $str( $gene_caller_ids ):
    --gene-caller-ids '${gene_caller_ids}'
#end if

--output-db-path '${output_db_path.extra_files_path}/CONTIGS.db'


#if $dump_dir:
    --dump-dir '${dump_dir.extra_files_path}'
#end if


#if $str( $num_models ):
    --num-models '${num_models}'
#end if


#if $str( $deviation ):
    --deviation '${deviation}'
#end if


#if $str( $modeller_database ):
    --modeller-database '${modeller_database}'
#end if


#if $str( $scoring_method ):
    --scoring-method '${scoring_method}'
#end if

${very_fast}


#if $str( $percent_identical_cutoff ):
    --percent-identical-cutoff '${percent_identical_cutoff}'
#end if


#if $str( $max_number_templates ):
    --max-number-templates '${max_number_templates}'
#end if

${skip_DSSP}

&> '${GALAXY_ANVIO_LOG}'

    ]]></command>
    <inputs>
        <param name="input_contigs_db" type="data" label="Contigs Db" format="anvio_contigs_db" optional="False" multiple="False" argument="--contigs-db" help="Anvi'o contigs database generated by 'anvi-gen-contigs'"/>
        <param name="genes_of_interest" type="data" label="Genes Of Interest" format="txt" optional="True" multiple="False" argument="--genes-of-interest" help="A file with anvi'o gene caller IDs. There should be only one column in the file, and each line should correspond to a unique gene caller id (without a column header)."/>
        <param name="gene_caller_ids" type="text" label="Gene Caller Ids" value="" optional="True" argument="--gene-caller-ids" help="Gene caller ids. Multiple of them can be declared separated by a delimiter (the default is a comma). In anvi-gen-variability-profile, if you declare nothing you will get all genes matching your other filtering criteria. In other programs, you may get everything, nothing, or an error. It really depends on the situation. Fortunately mistakes are cheap, so it's worth a try."/>
        <param name="num_models" type="text" label="Num Models" value="3" optional="True" argument="--num-models" help="This parameter determines the number of predicted structures that are solved for a given protein. The original atomic positions for each model are perturbed by an amount defined by --deviation, which leads to differences between each model. Therefore, whichever of the N models is chosen to be the &quot;best&quot; model is more likely to be accurate when --num-models is high, since more of the solution space is searched. It should be kept in mind that the largest determinant of a model's accuracy is determined by the protein templates used, so no need to go overboard with an excessively large --num-models. The default is 3."/>
        <param name="deviation" type="text" label="Deviation" value="4.0" optional="True" argument="--deviation" help="Deviation (angstroms)"/>
        <param name="modeller_database" type="text" label="Modeller Database" value="pdb_95" optional="True" argument="--modeller-database" help="Which database do you want to search the structures of? Default is &quot;pdb_95&quot;. If you have your own database it must have either the extension .bin or .pir. If you don't have a database or don't know what this means, don't worry, we will both inform you and take care of you."/>
        <param name="scoring_method" type="text" label="Scoring Method" value="DOPE_score" optional="True" argument="--scoring-method" help="How should the best model be decided? The metric used could be any of GA341_score, DOPE_score, and molpdf. GA341 is an absolute measure, where a good model will have a score near 1.0, whereas anything below 0.6 can be considered bad. DOPE and molpdf scores are relative energy measures, where lower scores are better. DOPE has been generally shown to be a better distinguisher between good and bad models than molpdf. By default, DOPE is used. To learn more see the MODELLER tutorial: https://salilab.org/modeller/tutorial/basic.html."/>
        <param name="very_fast" type="boolean" label="Very Fast" truevalue="--very-fast" falsevalue="" checked="" optional="True" argument="--very-fast" help="If provided, a very fast optimization is done for each model at the cost of accuracy. It is recommended to use a --num-models of 1, since the optimization is so crude that all models will likely converge to the same solution."/>
        <param name="percent_identical_cutoff" type="text" label="Percent Identical Cutoff" value="30" optional="True" argument="--percent-identical-cutoff" help="If a protein in the database has a proper percent identity to the gene of interest that is greater than or equal to --percent-identical-cutoff, then it is used as a template. Otherwise it is not. Here we define proper percent identity as the percentage of amino acids in the gene of interest that are identical to an entry in the database given the sequence length of the gene of interest. For example, if there is 100%% identity between the gene of interest and the template over the length of the alignment, but the alignment length is only half of the gene of interest sequence length, then the proper percent identical is 50%%. (This helps us avoid the inflation of identity scores due to only partially good matches). The default is 30."/>
        <param name="max_number_templates" type="text" label="Max Number Templates" value="5" optional="True" argument="--max-number-templates" help="Generally speaking it is best to use as many templates as possible given that they have high proper percent identity to the gene of interest. Taken from https://salilab.org/modeller/methenz/andras/node4.html: 'The use of several templates generally increases the model accuracy. One strength of MODELLER is that it can combine information from multiple template structures, in two ways. First, multiple template structures may be aligned with different domains of the target, with little overlap between them, in which case the modeling procedure can construct a homology-based model of the whole target sequence. Second, the template structures may be aligned with the same part of the target, in which case the modeling procedure is likely to automatically build the model on the locally best template [43,44]. In general, it is frequently beneficial to include in the modeling process all the templates that differ substantially from each other, if they share approximately the same overall similarity to the target sequence.' The default is 5."/>
        <param name="skip_DSSP" type="boolean" label="Skip Dssp" truevalue="--skip-DSSP" falsevalue="" checked="" optional="True" argument="--skip-DSSP" help="Dictionary of Secondary Structure of Proteins (DSSP) is a program that takes as its input a protein structure file and outputs predicted secondary structure (alpha helix, beta strand, etc.), measures of solvent accessibility, and hydrogen bonds for each residue in the protein. If for some reason you don't want this, provide this flag."/>
    </inputs>
    <outputs>
        <data name="output_contigs_db" format="anvio_contigs_db" format_source="input_contigs_db" metadata_source="input_contigs_db" label="${tool.name} on ${on_string}: Contigs Db"/>
        <data name="output_db_path" format="anvio_contigs_db" format_source="input_output_db_path" metadata_source="input_output_db_path" label="${tool.name} on ${on_string}: Output Db Path"/>
        <data name="dump_dir" format="anvio_composite" format_source="input_dump_dir" metadata_source="input_dump_dir" label="${tool.name} on ${on_string}: Dump Dir"/>
        <data name="GALAXY_ANVIO_LOG" format="txt" label="${tool.name} on ${on_string}: Log"/>
    </outputs>
    <help><![CDATA[
        usage: anvi-gen-structure-database [-h] -c CONTIGS_DB [--genes-of-interest FILE]
                              [--gene-caller-ids GENE_CALLER_IDS]
                              [-o DB_FILE_PATH] [--dump-dir DUMP_DIR]
                              [--num-models NUM_MODELS]
                              [--deviation DEVIATION]
                              [--modeller-database MODELLER_DATABASE]
                              [--scoring-method SCORING_METHOD] [--very-fast]
                              [--percent-identical-cutoff PERCENT_IDENTICAL_CUTOFF]
                              [--max-number-templates MAX_NUMBER_TEMPLATES]
                              [--skip-DSSP]
                              [--modeller-executable MODELLER_EXECUTABLE]

Identifies genes in your contigs database that encode proteins that are
homologous to proteins with solved structures. If sufficiently similar
homologs are identified, they are used as structural templates to predict the
3D structure of proteins in your contigs database. This means we are at the
mercy of structural biologists: if they have not solved a structure of a
protein sufficiently similar in AA sequence to yours, this isn't going to
work. But it's worth a try! The software we are using is MODELLER, more of
which can be learned about at https://salilab.org/modeller/, or in our
tutorial, which doesn't exist yet FIXME

optional arguments:
  -h, --help            show this help message and exit
  -c CONTIGS_DB, --contigs-db CONTIGS_DB
                        Anvi'o contigs database generated by 'anvi-gen-
                        contigs'
  --genes-of-interest FILE
                        A file with anvi'o gene caller IDs. There should be
                        only one column in the file, and each line should
                        correspond to a unique gene caller id (without a
                        column header).
  --gene-caller-ids GENE_CALLER_IDS
                        Gene caller ids. Multiple of them can be declared
                        separated by a delimiter (the default is a comma). In
                        anvi-gen-variability-profile, if you declare nothing
                        you will get all genes matching your other filtering
                        criteria. In other programs, you may get everything,
                        nothing, or an error. It really depends on the
                        situation. Fortunately mistakes are cheap, so it's
                        worth a try.
  -o DB_FILE_PATH, --output-db-path DB_FILE_PATH
                        Output file path for the new database.
  --dump-dir DUMP_DIR   Modelling and annotating structures requires a lot of
                        moving parts, each which have their own outputs. The
                        output of this program is a structure database
                        containing the pertinent results of this computation,
                        however a lot of stuff doesn't make the cut. By
                        providing a directory for this parameter you will get,
                        in addition to the structure database, a directory
                        containing the raw output for everything.
  --num-models NUM_MODELS, -N NUM_MODELS
                        This parameter determines the number of predicted
                        structures that are solved for a given protein. The
                        original atomic positions for each model are perturbed
                        by an amount defined by --deviation, which leads to
                        differences between each model. Therefore, whichever
                        of the N models is chosen to be the "best" model is
                        more likely to be accurate when --num-models is high,
                        since more of the solution space is searched. It
                        should be kept in mind that the largest determinant of
                        a model's accuracy is determined by the protein
                        templates used, so no need to go overboard with an
                        excessively large --num-models. The default is 3.
  --deviation DEVIATION, -d DEVIATION
                        Deviation (angstroms)
  --modeller-database MODELLER_DATABASE, -D MODELLER_DATABASE
                        Which database do you want to search the structures
                        of? Default is "pdb_95". If you have your own database
                        it must have either the extension .bin or .pir. If you
                        don't have a database or don't know what this means,
                        don't worry, we will both inform you and take care of
                        you.
  --scoring-method SCORING_METHOD, -b SCORING_METHOD
                        How should the best model be decided? The metric used
                        could be any of GA341_score, DOPE_score, and molpdf.
                        GA341 is an absolute measure, where a good model will
                        have a score near 1.0, whereas anything below 0.6 can
                        be considered bad. DOPE and molpdf scores are relative
                        energy measures, where lower scores are better. DOPE
                        has been generally shown to be a better distinguisher
                        between good and bad models than molpdf. By default,
                        DOPE is used. To learn more see the MODELLER tutorial:
                        https://salilab.org/modeller/tutorial/basic.html.
  --very-fast           If provided, a very fast optimization is done for each
                        model at the cost of accuracy. It is recommended to
                        use a --num-models of 1, since the optimization is so
                        crude that all models will likely converge to the same
                        solution.
  --percent-identical-cutoff PERCENT_IDENTICAL_CUTOFF, -p PERCENT_IDENTICAL_CUTOFF
                        If a protein in the database has a proper percent
                        identity to the gene of interest that is greater than
                        or equal to --percent-identical-cutoff, then it is
                        used as a template. Otherwise it is not. Here we
                        define proper percent identity as the percentage of
                        amino acids in the gene of interest that are identical
                        to an entry in the database given the sequence length
                        of the gene of interest. For example, if there is 100%
                        identity between the gene of interest and the template
                        over the length of the alignment, but the alignment
                        length is only half of the gene of interest sequence
                        length, then the proper percent identical is 50%.
                        (This helps us avoid the inflation of identity scores
                        due to only partially good matches). The default is
                        30.
  --max-number-templates MAX_NUMBER_TEMPLATES, -T MAX_NUMBER_TEMPLATES
                        Generally speaking it is best to use as many templates
                        as possible given that they have high proper percent
                        identity to the gene of interest. Taken from https://s
                        alilab.org/modeller/methenz/andras/node4.html: 'The
                        use of several templates generally increases the model
                        accuracy. One strength of MODELLER is that it can
                        combine information from multiple template structures,
                        in two ways. First, multiple template structures may
                        be aligned with different domains of the target, with
                        little overlap between them, in which case the
                        modeling procedure can construct a homology-based
                        model of the whole target sequence. Second, the
                        template structures may be aligned with the same part
                        of the target, in which case the modeling procedure is
                        likely to automatically build the model on the locally
                        best template [43,44]. In general, it is frequently
                        beneficial to include in the modeling process all the
                        templates that differ substantially from each other,
                        if they share approximately the same overall
                        similarity to the target sequence.' The default is 5.
  --skip-DSSP           Dictionary of Secondary Structure of Proteins (DSSP)
                        is a program that takes as its input a protein
                        structure file and outputs predicted secondary
                        structure (alpha helix, beta strand, etc.), measures
                        of solvent accessibility, and hydrogen bonds for each
                        residue in the protein. If for some reason you don't
                        want this, provide this flag.
  --modeller-executable MODELLER_EXECUTABLE
                        The MODELLER program to use. For example, `mod9.19`.
                        The default is `mod9.19`

DATABASES:
  Declaring relevant anvi'o databases. First things first.

GENES:
  Specifying which genes you want to be modelled.

OUTPUT:
  Output file and output style.

MODELLER PARAMS:
  Parameters for MODELLER's homology modeling.

EXTRA:
  Everything else.

    ]]></help>
    <citations>
        <citation type="doi">10.7717/peerj.1319</citation>
        <citation type="bibtex">@ARTICLE{Blankenberg19-anvio,
   author = {Daniel Blankenberg, et al},
   title = {In preparation..},
   }</citation>
    </citations>
</tool>