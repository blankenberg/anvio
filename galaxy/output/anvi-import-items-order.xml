<tool id="anvi_import_items_order" name="anvi-import-items-order" version="5.3.0" tool_type="default">
    <description>Import a new items order into an anvi'o database</description>
    <requirements>
        <requirement type="package" version="5.3.0">anvio</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <version_command>anvi-import-items-order --version</version_command>
    <command><![CDATA[
        
    #if $input_db_path:
        cp -R '${input_db_path.extra_files_path}' '${output_db_path.extra_files_path}'
    #else
        echo ''
    #end if
 &&
 anvi-import-items-order

#if $input_order:
    --input-order '${input_order}'
#end if


#if $output_db_path:
    --db-path '${output_db_path.extra_files_path}/${output_db_path.metadata.anvio_basename}'
#end if


#if $str( $name ):
    --name '${name}'
#end if

${make_default}

&> '${GALAXY_ANVIO_LOG}'

    ]]></command>
    <inputs>
        <param name="input_order" type="data" label="Input Order" format="txt" optional="True" multiple="False" argument="--input-order" help="One of the two important things you must provide: the file that contains the items order. The format of this file is important. It can either contain a proper newick tree in it, or a complete list of 'items' in the target database where every line of the file is simply an item name. If you are providing a newick tree, the entire file should be a single line. I know it sounds hard, but you seriously can do this."/>
        <param name="input_db_path" type="data" label="Db Path" format="anvio_db" optional="True" multiple="False" argument="--db-path" help="An appropriate anvi'o database to import the items order. Currently it can be a profile, pan, or genes database. But you should try your chances with other kinds of databases for fun and games. Basically, if the database contains an items order table, then things will work. Otherwise, you will probably get angry errors back in the worst case scenario."/>
        <param name="name" type="text" label="Name" value="" optional="True" argument="--name" help="What should we call this order? Give it a concise, single-word name."/>
        <param name="make_default" type="boolean" label="Make Default" truevalue="--make-default" falsevalue="" checked="False" optional="True" argument="--make-default" help="You have the option to make this order the default order in the database. Which means, anvi'o will use this one when someone runs the program anvi-interactive and presses draw. Big responsibility. But if you have a 'default' state, it will not work because the default items order in the state file overwrites the one that comes from the database. So not that big of a responsibility."/>
    </inputs>
    <outputs>
        <data name="output_db_path" format="anvio_db" format_source="input_db_path" metadata_source="input_db_path" label="${tool.name} on ${on_string}: Db Path"/>
        <data name="GALAXY_ANVIO_LOG" format="txt" label="${tool.name} on ${on_string}: Log"/>
    </outputs>
    <help><![CDATA[
        usage: anvi-import-items-order [-h] [-i FILE] [-p DB PATH] [--name ORDER NAME]
                              [--make-default]

Import a new items order into an anvi'o database

optional arguments:
  -h, --help            show this help message and exit
  -i FILE, --input-order FILE
                        One of the two important things you must provide: the
                        file that contains the items order. The format of this
                        file is important. It can either contain a proper
                        newick tree in it, or a complete list of 'items' in
                        the target database where every line of the file is
                        simply an item name. If you are providing a newick
                        tree, the entire file should be a single line. I know
                        it sounds hard, but you seriously can do this.
  -p DB PATH, --db-path DB PATH
                        An appropriate anvi'o database to import the items
                        order. Currently it can be a profile, pan, or genes
                        database. But you should try your chances with other
                        kinds of databases for fun and games. Basically, if
                        the database contains an items order table, then
                        things will work. Otherwise, you will probably get
                        angry errors back in the worst case scenario.
  --name ORDER NAME     What should we call this order? Give it a concise,
                        single-word name.
  --make-default        You have the option to make this order the default
                        order in the database. Which means, anvi'o will use
                        this one when someone runs the program anvi-
                        interactive and presses draw. Big responsibility. But
                        if you have a 'default' state, it will not work
                        because the default items order in the state file
                        overwrites the one that comes from the database. So
                        not that big of a responsibility.

CRITICAL INPUT:
  Basically the input file and the target database

NOT SO CRITICAL INPUT:
  Because not all parameters are created equal

    ]]></help>
    <citations>
        <citation type="doi">10.7717/peerj.1319</citation>
        <citation type="bibtex">@ARTICLE{Blankenberg19-anvio,
   author = {Daniel Blankenberg, et al},
   title = {In preparation..},
   }</citation>
    </citations>
</tool>