<tool id="anvi_get_aa_counts" name="anvi-get-aa-counts" version="5.2">
    <description>Collects AA counts information from a contigs database                                                  for a given bin, set of contigs, or set of genes.</description>
    <requirements>
        <requirement type="package" version="5.2">anvio</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <version_command>anvi-get-aa-counts --version</version_command>
    <command><![CDATA[
        cp -R '${input_contigs_db.extra_files_path}' '${output_contigs_db.extra_files_path}'
 && 

    #if $input_profile_db:
        cp -R '${input_profile_db.extra_files_path}' '${output_profile_db.extra_files_path}'
    #else
        echo ''
    #end if
 &&
 anvi-get-aa-counts
--contigs-db '${output_contigs_db.extra_files_path}/CONTIGS.db'


#if $output_file:
    --output-file '${output_file}'
#end if

--profile-db '${output_profile_db.extra_files_path}/PROFILE.db'


#if $str( $collection_name ):
    --collection-name '${collection_name}'
#end if


#if $bin_ids_file:
    --bin-ids-file '${bin_ids_file}'
#end if


#if $contigs_of_interest:
    --contigs-of-interest '${contigs_of_interest}'
#end if


#if $str( $gene_caller_ids ):
    --gene-caller-ids '${gene_caller_ids}'
#end if

&> '${GALAXY_ANVIO_LOG}'

    ]]></command>
    <inputs>
        <param name="input_contigs_db" type="data" label="Contigs Db" format="anvio_contigs_db" optional="False" multiple="False" argument="--contigs-db" help="Anvi'o contigs database generated by 'anvi-gen-contigs'"/>
        <param name="input_profile_db" type="data" label="Profile Db" format="anvio_profile_db" optional="True" multiple="False" argument="--profile-db" help="Anvi'o profile database"/>
        <param name="collection_name" type="text" label="Collection Name" value="" optional="True" argument="--collection-name" help="Collection name."/>
        <param name="bin_ids_file" type="data" label="Bin Ids File" format="txt" optional="True" multiple="False" argument="--bin-ids-file" help="Text file for bins (each line should be a unique bin id)."/>
        <param name="contigs_of_interest" type="data" label="Contigs Of Interest" format="txt" optional="True" multiple="False" argument="--contigs-of-interest" help="A file with contig names. There should be only one column in the file, and each line should correspond to a unique split name."/>
        <param name="gene_caller_ids" type="text" label="Gene Caller Ids" value="" optional="True" argument="--gene-caller-ids" help="Gene caller ids. Multiple of them can be declared separated by a delimiter (the default is a comma). In anvi-gen-variability-profile, if you declare nothing you will get all genes matching your other filtering criteria. In other programs, you may get everything, nothing, or an error. It really depends on the situation. Fortunately mistakes are cheap, so it's worth a try."/>
    </inputs>
    <outputs>
        <data name="output_contigs_db" format="anvio_contigs_db" format_source="input_contigs_db" metadata_source="input_contigs_db" label="${tool.name} on ${on_string}: Contigs Db"/>
        <data name="output_file" format="txt" format_source="input_output_file" metadata_source="input_output_file" label="${tool.name} on ${on_string}: Output File"/>
        <data name="output_profile_db" format="anvio_profile_db" format_source="input_profile_db" metadata_source="input_profile_db" label="${tool.name} on ${on_string}: Profile Db"/>
        <data name="GALAXY_ANVIO_LOG" format="txt" label="${tool.name} on ${on_string}: Log"/>
    </outputs>
    <help><![CDATA[
        usage: anvi-get-aa-counts [-h] -c CONTIGS_DB [-o FILE_PATH]
                              [-p PROFILE_DB] [-C COLLECTION_NAME]
                              [-B FILE_PATH] [--contigs-of-interest FILE]
                              [--gene-caller-ids GENE_CALLER_IDS]

Collects AA counts information from a contigs database for a given bin, set of
contigs, or set of genes.

optional arguments:
  -h, --help            show this help message and exit
  -c CONTIGS_DB, --contigs-db CONTIGS_DB
                        Anvi'o contigs database generated by 'anvi-gen-
                        contigs'
  -o FILE_PATH, --output-file FILE_PATH
                        File path to store results.
  -p PROFILE_DB, --profile-db PROFILE_DB
                        Anvi'o profile database
  -C COLLECTION_NAME, --collection-name COLLECTION_NAME
                        Collection name.
  -B FILE_PATH, --bin-ids-file FILE_PATH
                        Text file for bins (each line should be a unique bin
                        id).
  --contigs-of-interest FILE
                        A file with contig names. There should be only one
                        column in the file, and each line should correspond to
                        a unique split name.
  --gene-caller-ids GENE_CALLER_IDS
                        Gene caller ids. Multiple of them can be declared
                        separated by a delimiter (the default is a comma). In
                        anvi-gen-variability-profile, if you declare nothing
                        you will get all genes matching your other filtering
                        criteria. In other programs, you may get everything,
                        nothing, or an error. It really depends on the
                        situation. Fortunately mistakes are cheap, so it's
                        worth a try.

MANDATORY STUFF:
  You have to set the following two parameters, then you will select one set
  of parameters from the following optional sections. If you select nothing
  from those sets, AA counts for everything in the contigs database will be
  reported.

    ]]></help>
    <citations>
        <citation type="doi">10.7717/peerj.1319</citation>
        <citation type="bibtex">@ARTICLE{Blankenberg19-anvio,
   author = {Daniel Blankenberg, et al},
   title = {In preparation..},
   }</citation>
    </citations>
</tool>